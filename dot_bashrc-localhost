# ~/.bashrc: executed by bash(1) for non-login shells.

#
# If not running interactively, don't do anything
#
[ -z "$PS1" ] && return

#
# Ubuntu Maverick 10.10 has issue with TERM setting
#
export TERM=xterm-256color


######################################################################
# Enable programmable completion features
#
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

######################################################################
# emacs/vi mode
#
set -o vi


######################################################################
# History
#

# don't put duplicate lines in the history
HISTCONTROL=$HISTCONTROL${HISTCONTROL+,}ignoredups
HISTCONTROL=ignoreboth

# date on history
export HISTTIMEFORMAT='%F %T  '
export HISTCONTROL=ignoredups


######################################################################
# shopt commands...
#

# append to the history file, don't overwrite it
shopt -s histappend

#
# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
#
shopt -s checkwinsize

# automagically fix misspell directory
shopt -s cdspell

# Quick command completion
shopt -s no_empty_cmd_completion


######################################################################
# proxy
#
# NTLMAPS
# export http_proxy=http://127.0.0.1:5865
# export https_proxy=http://127.0.0.1:5865
# export ftp_proxy=$http_proxy

# CNTML
export http_proxy=http://127.0.0.1:3128
export https_proxy=http://127.0.0.1:3128
export ftp_proxy=$http_proxy


######################################################################
# path
#
export PATH=/home/et6339/.vim/bin:/home/et6339/files/bin:$PATH


######################################################################
# Editor
#
export EDITOR=vi
export VISUAL=vi


######################################################################
# Less
#

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set less to lesspipe
export LESSOPEN='|/usr/bin/lesspipe %s'


######################################################################
# Prompt
#

# Check for terminal type to set prompt
case $TERM in
    xterm*|rxvt|Eterm|eterm)
        PROMPT_COMMAND='echo -ne "\033]0;${HOSTNAME%%.*}:${PWD/$HOME/~}\007"'
        ;;
    screen)
        PROMPT_COMMAND='echo -ne "\033_${HOSTNAME%%.*}:${PWD/$HOME/~}\033\\"'
        ;;
esac

# prompt colour
if [ "$TERM" != 'dumb'  ] && [ -n "$BASH" ]
then
    # export PS1='\[\e[0m\]\u@\[\e[1;$(hostname_color)m\]\h:\e[32;1m\][\j]\[\033[33m\][\W]\[\033[01;36m\]$git_branch \$ \[\033[00m\]'
    # export PS2="continue-> "
    HOST_COLOR="\[\033[1;$((30 + $(hostname | cksum | cut -c1-3) % 6))m\]"
    PS1="\[\033[0m\]\u${HOST_COLOR}@\h\[\033[32;1m\] [\j]\[\033[33m\][\W]\[\033[01;36m\]\$git_branch \$\[\033[00m\] "
    PS2="continue-> "
fi

#
# Turn the prompt to red on error
#
# 26/04/2013 - the below PS1 and PROMPT_COMMAND is replaced with .bash_prompt
#
# PS1error='$( ret=$? ; test $ret -gt 0 && echo "\[\e[41;93m\][FAILED: $ret]\[\e[0m\] " )'
# export PS1="$PS1error\[\e$PS1\[\e[0m\]"
#
# prompt for Git
# PROMPT_COMMAND="find_git_branch; $PROMPT_COMMAND"
# 
source .bash_prompt


######################################################################
# FUNCTIONS
#

function prompt {
  local BLUE="\[\033[0;34m\]"
  local DARK_BLUE="\[\033[1;34m\]"
  local RED="\[\033[0;31m\]"
  local DARK_RED="\[\033[1;31m\]"
  local NO_COLOR="\[\033[0m\]"
  case $TERM in
    xterm*|rxvt*)
      TITLEBAR='\[\033]0;\u@\h:]'
      ;;
    *)
      TITLEBAR=""
      ;;
  esac
  PS1="\u@\h [\t]> "
  PS1="${TITLEBAR}\
  $DARK_BLUE\u@\h $DARK_RED[\t]>$NO_COLOR "
  PS2='continue-> '
  PS4='$0.$LINENO+ '
}

#
# Color prompt for Git branch
#
function find_git_branch {
    local dir=. head
    until [ "$dir" -ef / ]; do
        if [ -f "$dir/.git/HEAD" ]; then
            head=$(< "$dir/.git/HEAD")
            if [[ $head == ref:\ refs/heads/* ]]; then
                git_branch=" ${head##*/}"
            elif [[ $head != '' ]]; then
                git_branch=' (detached)'
            else
                git_branch=' (unknown)'
            fi
            return
        fi
        dir="../$dir"
    done
    git_branch=''
}

#
# open Perl module by its name, not slash separator
#
function vim {
    set -- "${@//:://}"
    module="${@/%/.pm}"
    testclass="t/${@/%/.pm}"
    if [ -f $module ]; then
        command vim $module
    elif [ -f $testclass ]; then
        command vim $testclass
    else
        command vim "${@}"
    fi
}

# ditto above for gvim
function gvim {
    set -- "${@//:://}"
    module="${@/%/.pm}"
    testclass="t/${@/%/.pm}"
    if [ -f $module ]; then
        command gvim --remote-silent $module || command gvim $module;
    elif [ -f $testclass ]; then
        command gvim --remote-silent $testclass || command gvim $testclass;
    else
        command gvim --remote-silent "${@}" || command gvim "${@}";
    fi
}

#
# Colors on a per-server basis based on a simple
# checksum. Inspired by http://geofft.mit.edu/blog/sipb/125
#
function hostname_color() {
    echo $((31 + $(hostname | cksum | cut -c1-3) % 6))
    return 0
}


######################################################################
# Colours
#
BLACK='\e[0;30m'
BLUE='\e[0;34m'
GREEN='\e[0;32m'
CYAN='\e[0;36m'
RED='\e[0;31m'
PURPLE='\e[0;35m'
BROWN='\e[0;33m'
LIGHTGRAY='\e[0;37m'
DARKGRAY='\e[1;30m'
LIGHTBLUE='\e[1;34m'
LIGHTGREEN='\e[1;32m'
LIGHTCYAN='\e[1;36m'
LIGHTRED='\e[1;31m'
LIGHTPURPLE='\e[1;35m'
YELLOW='\e[1;33m'
WHITE='\e[1;37m'
NC='\e[0m'    # No Color

# Prompt section
rgb_restore='\[\033[00m\]'
rgb_black='\[\033[00;30m\]'
rgb_firebrick='\[\033[00;31m\]'
rgb_red='\[\033[01;31m\]'
rgb_forest='\[\033[00;32m\]'
rgb_green='\[\033[01;32m\]'
rgb_brown='\[\033[00;33m\]'
rgb_yellow='\[\033[01;33m\]'
rgb_navy='\[\033[00;34m\]'
rgb_blue='\[\033[01;34m\]'
rgb_purple='\[\033[00;35m\]'
rgb_magenta='\[\033[01;35m\]'
rgb_cadet='\[\033[00;36m\]'
rgb_cyan='\[\033[01;36m\]'
rgb_gray='\[\033[00;37m\]'
rgb_white='\[\033[01;37m\]'
rgb_host="${rgb_cyan}"
rgb_std="${rgb_white}"

if [ `id -u` -eq 0 ]
then
    rgb_usr="${rgb_red}"
else
    rgb_usr="${rgb_green}"
fi

unset rgb_restore \
 rgb_black     \
 rgb_firebrick \
 rgb_host      \
 rgb_red       \
 rgb_forest    \
 rgb_green     \
 rgb_brown     \
 rgb_yellow    \
 rgb_navy      \
 rgb_blue      \
 rgb_purple    \
 rgb_magenta   \
 rgb_cadet     \
 rgb_cyan      \
 rgb_gray      \
 rgb_white     \
 rgb_std       \
 rgb_usr

# Welcome screen
echo -ne "${LIGHTGREEN}" "Hello, $USER. today is, "; date
echo -e "${LIGHTRED}"; cal ;
echo -ne "${CYAN}";
echo -ne "${LIGHTPURPLE}Sysinfo:";uptime ;echo ""

# Colour grep
export GREP_COLOR='1;33'
GREP_OPTIONS='--color=auto'
if grep --help | grep -- --exclude-dir &>/dev/null; then
    for PATTERN in .cvs .git .hg .svn; do
        GREP_OPTIONS="$GREP_OPTIONS --exclude-dir=$PATTERN"
    done
fi
export GREP_OPTIONS


######################################################################
# Pretty Man pages
#
export LESS_TERMCAP_mb=$'\E[01;31m'             # begin blinking
export LESS_TERMCAP_md=$'\E[01;38;5;74m'        # begin bold
export LESS_TERMCAP_me=$'\E[0m'                 # end mode
export LESS_TERMCAP_se=$'\E[0m'                 # end standout-mode
export LESS_TERMCAP_so=$'\E[38;5;246m'          # begin standout-mode - info box
export LESS_TERMCAP_ue=$'\E[0m'                 # end underline
export LESS_TERMCAP_us=$'\E[04;38;5;146m'       # begin underline

######################################################################
# Aliases
#

# Alias definitions.
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias ll='ls -lp --color=tty'
    alias l='ls++'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# cvsroot alias
alias cvsclink='export CVSROOT=:pserver:et6339@vcmsd.vic.hpa:/cvsroot'
alias cvslaptop='export CVSROOT=:pserver:et6339@localhost:/cvsroot'
alias cvsit='export CVSROOT=:pserver:et6339@robin.vic.hpa:/prod2/cvsroot'
alias cvsitnew='export CVSROOT=:pserver:taned@mel4app05pv.salmat.com.au:/prod/cvsroot'
alias cvsedm='export CVSROOT=:pserver:et6339@robin.vic.hpa:/prod2/edm/cvsroot'

# Machines alias
alias sshmadev='ssh eddyt@client-gw2-mip-madev.act.hpa'
alias sshsybill='ssh eddyt@sybill.act.hpa'
alias sshvcmsp='ssh -Y vcmsp'
alias sshvcmsd='ssh -Y vcmsd'
alias sshedd='ssh xfrmbk@edd'
alias sshappsvr04='ssh taned@appsvr04.vic.hpa'
alias sshmel4app='ssh taned@mel4app05pv.vic.hpa'
alias sshmel4dev='ssh taned@mel4dev05pv.vic.hpa'
alias sshpbursyd2='ssh -t pbursyd2 screen /bin/bash'
alias sshmel4dev06lx='ssh et6339@mel4dev06lx'
alias sshmel4app06lx='ssh et6339@mel4app06lx'
alias sshatoprod='ssh taned@atoprod.act.hpa'
alias sshodin='/usr/bin/ssh odin'

# ack-grep alias
alias ack='ACK_PAGER_COLOR="less -x4SRFX" /opt/perl5/bin/ack -a'

# Colour diff
function cvsdiff() { cvs diff $@ | colordiff;}
function svndiff() { svn diff $@ | colordiff;}
function rcsdiff() { /usr/bin/rcsdiff -u $@ | colordiff;}
alias diff='colordiff -u'

# Machine load sort by CPU usage
alias pscpu='ps -eopid,ppid,pcpu,etime,vsz,args | sort -rnk 3'

# CDPATH to centrelink cvs working directory
# export CDPATH=/home/et6339/cvs/centrelink.solution-consolidation_development/bin/
alias ..2="cd ../../"
alias ..3="cd ../../../"

# reset prompt after error
alias c="tty -s"

# mutt alias
alias mutt='mutt -F $HOME/.mutt/muttrc_hpa'

# CNTML alias
alias cntlm='/usr/sbin/cntlm -v -c /home/et6339/.cntlm.conf'

# Ghostscrip viewer alias
alias gs='gs -g832x982 -r85x85'

# sync date
alias syncdate='sudo /usr/sbin/ntpdate exchange2k.vic.hpa'

# ctags alias for Perl
alias perltags='ctags -f tags --recurse --totals --exclude=blib --exclude=.svn --exclude='*~' --languages=Perl --langmap=Perl:+.t'

# tree 
alias tree="/usr/bin/tree --dirsfirst -F -I 'CVS|log|tags|*.backup'"


######################################################################
# Perl 5
#

# perlbrew
export PERLBREW_ROOT=/opt/perl5
source ${PERLBREW_ROOT}/etc/bashrc

# perl module version
function pmver ( ) { perl -M$1 -le "print $1->VERSION"; }

# perldoc-complete
# export PERLDOC=-it
alias pod='perldoc -o man'
complete -C perldoc-complete.pl -o nospace -o default pod
complete -C perldoc-complete.pl -o nospace -o default podw

# perltidy with Method::Signature::simple
alias perltidy='/home/et6339/files/bin/perltidy'

######################################################################
# tmuxinator
# 
# [[ -s $HOME/.tmuxinator/scripts/tmuxinator ]] && source $HOME/.tmuxinator/scripts/tmuxinator
[[ -s /usr/local/bin/tmuxinator_completion ]] && source /usr/local/bin/tmuxinator_completion

######################################################################
# source for directory stack utilities
source ~/files/bin/dir.sh

######################################################################
# Java home
#
export JAVA_HOME=/usr/lib/jvm/java-1.6.0-openjdk


## START-BCVI
  export BCVI_PORT=`cat $HOME/.config/bcvi/listener_port`
  export BCVI_KEY=`cat $HOME/.config/bcvi/listener_key`
  export BCVI_CONF=localhost:localhost:$BCVI_PORT:$BCVI_KEY
  echo $PATH | grep -q /home/et6339/bin || PATH="/home/et6339/bin:$PATH"
  test -n "$(which bcvi)" && eval "$(bcvi --unpack-term)"
  test -n "${BCVI_CONF}"  && alias bcp="bcvi -c scpd"
  test -n "${BCVI_CONF}"  && alias ssh="bcvi --wrap-ssh --"
  test -n "${BCVI_CONF}"  && alias bnotify="bcvi --no-path-xlate -c notify --"
  # need not these two aliases for localhost
  # test -n "${BCVI_CONF}"  && alias vi="bcvi"
  # test -n "${BCVI_CONF}"  && alias suvi="EDITOR='bcvi -c viwait' sudoedit"
## END-BCVI

printf 1
