#!en;1.1.4

#[gtk-about]
[Icon]
#j+[0;128] Desired icon size for this applet
#{Set to 0 to use the default applet size}
icon size = 0;0

#s Name of the icon as it will appear in its label in the dock :
name = Compiz Icon

#d Name of the dock it belongs to:
dock name = 

icon=
order=

#[gtk-convert]
[Desklet]

#X[Position]
frame_pos =

#b Lock position ?
#{If locked, the desklet can't be moved by simply dragging it with the left mouse button. Of course you can still move it with ALT + left_click.}
locked = false

#j+[48;512] Desklet's dimension (width x height) :
#{Depending on your WindowManager, you can resize it with ALT + middle_click or ALT + left_click for exemple.}
size = 96;96

#i[-2048;2048] Desklet's position (x ; y) :
#{Depending on your WindowManager, you can move it with ALT + left_click}
x position=0
#i[-2048;2048] ...
y position=0

#I[-180;180] Rotation :
#{You can quickly rotate the desklet with the mouse, by dragging the little buttons on its left and top sides.}
rotation = 0

#X[Visibility]
frame_visi =

#b Is detached from the dock ?
initially detached=false
#l[Normal;Keep above;Keep below;On Widget Layer;Reserve space] Visibility :
#{for CompizFusion's "widget layer", set behaviour in Compiz to: (class=Cairo-dock & type=utility)}
accessibility=0
#b Should be visible on all desktops ?
sticky=true



use size=

#F[Decorations;gtk-orientation-portrait]
frame_deco=

#o+ Choose a decoration theme for this desklet :
#{Choose 'Custom decorations' to define your own decorations below.}
decorations = default

#v
sep_deco =

#S+ Background image :
#{It's an image that will be displayed below the drawings, like a frame for exemple. Let empty to not use any.}
bg desklet =
#e+[0;1] Background tansparency :
bg alpha = 1
#i+[0;256] Left offset :
#{in pixels. Use this to adjust the left position of the drawings.}
left offset = 0
#i+[0;256] Top offset :
#{in pixels. Use this to adjust the top position of the drawings.}
top offset = 0
#i+[0;256] Right offset :
#{in pixels. Use this to adjust the right position of the drawings.}
right offset = 0
#i+[0;256] Bottom offset :
#{in pixels. Use this to adjust the bottom position of the drawings.}
bottom offset = 0
#S+ Foreground image :
#{It's an image that will be displayed above the drawings, like a reflect for exemple. Let empty to not use any.}
fg desklet =
#e+[0;1] Foreground tansparency :
fg alpha = 1

#[gtk-preferences]
[Configuration]

#F[Actions;gtk-preferences]
frame_act = 

#l[None;Switch WM;Widget Layer;Expose;Show Desktop] Choose an action for the middle click on the icon :
#{Except for switching to another WM, you must activate the Dbus plugin in Compiz, along with the plug-in corresponding to the desired action.}
middle click = 1

#s Custom command for system's Windows Manager :
#{This command will be used to launch the system WM; let it blank to use the default one.}
ccmd =

#b Auto-reload Compiz ?
#{If Compiz unexpectedly quit, Cairo-Dock will restart it. You have to quit Compiz from the dock then.}
auto reload compiz = false
#b Auto-reload the Decorator ?
#{If the decorator unexpectedly quit, Cairo-Dock will restart it. You have to quit Compiz from the dock then.}
auto reload decorator = true

#b Force Compiz settings at startup ?
#{Load Compiz with options at applet's startup.}
force = false

#b Steal the application's icon in taskbar ?
#{It will prevent the CSSM or Emerald icon to appear in the task bar. The corresponding subdock's icons will then behave as launcher and an appli.}
inhibate appli = true

#b Add Exposition & Widget Layer to sub-dock ?
#{Display in the applet's sub-dock 2 icons for Compiz Exposition & Widget Layer plug-ins. Otherwise they will be available in the menu.}
script = true

#b Add Emerald's Configuration to sub-dock ?
#{Display in the applet's sub-dock an icon for the Emerald's configuration panel.}
emerald = true


#F[Compiz Options;gtk-info]
frame_co = 
#b Use Loose Binding ?
#{With strict binding textures are bound whenever they are enabled, with loose binding they are enabled when created. The Nvidia driver seems a bit slow when binding textures, that's why this option gives a heavy performance increase on Nvidia.}
binding = false
#b Use Indirect Rendering ?
#{Use thoses options only if you know them.}
irendering = false
#b Only Current Screen ?
#{Usefull when having dual or more X separate screens.}
ulocalscreen = false
#E1[emerald;gtk-window-decorator;kde-window-decorator;heliodor] Choose your Windows Decorator :
#{By default it will be Emerald.}
system decorator = 

#F
frame_sub=
#n+ Name of the view used for the sub-dock :
#{Let it empty to use default sub-dock view.}/
renderer = 

#F[Images;gtk-dialog-info]
frame_img = 
#S+ Name of an image for the 'default' icon :
#{Let t empty to use the default icon.}
default icon = 
#S+ Name of an image for the 'broken' icon :
#{Let t empty to use the default icon.}
broken icon = 
#S+ Name of an image for the 'other wm' icon :
#{Let t empty to use the default icon.}
other icon = 
#S+ Name of an image for the 'setting' icon :
#{Let t empty to use the default icon.}
setting icon = 
#S+ Name of an image for the 'emerald' icon :
#{Let t empty to use the default icon.}
emerald icon = 
#S+ Name of an image for the 'reload' icon :
#{Let t empty to use the default icon.}
reload icon = 
#S+ Name of an image for the 'exposition' icon :
#{Let t empty to use the default icon.}
expo icon = 
#S+ Name of an image for the 'widget layer' icon :
#{Let t empty to use the default icon.}
wlayer icon = 
