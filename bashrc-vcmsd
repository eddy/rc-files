# ~/.bashrc: executed by bash(1) for non-login shells.

#
# If not running interactively, don't do anything
#
[ -z "$PS1" ] && return

#
# vcmsd/p do not have xterm-256colors
#
# export TERM=xterm


######################################################################
# Enable programmable completion features
#
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

######################################################################
# emacs/vi mode
#
set -o vi


######################################################################
# History
#

# don't put duplicate lines in the history
HISTCONTROL=$HISTCONTROL${HISTCONTROL+,}ignoredups
HISTCONTROL=ignoreboth

# date on history
export HISTTIMEFORMAT='%F %T  '
export HISTCONTROL=ignoredups


######################################################################
# shopt commands...
#

# append to the history file, don't overwrite it
shopt -s histappend

#
# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
#
shopt -s checkwinsize

# automagically fix misspell directory
shopt -s cdspell

# Quick command completion
shopt -s no_empty_cmd_completion


######################################################################
# proxy
#
export http_proxy=http://127.0.0.1:5865
export ftp_proxy=$http_proxy


######################################################################
# path
#
export PATH=$PATH:/users/et6339/files/bin:/users/ibs/bin/ibs41


######################################################################
# Editor
#
export EDITOR=vi
export VISUAL=vi


######################################################################
# Less
#

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set less to lesspipe
# export LESSOPEN='|/usr/bin/lesspipe %s'


######################################################################
# Prompt
#

# Check for terminal type to set prompt
case $TERM in
    xterm*|rxvt|Eterm|eterm)
        PROMPT_COMMAND='echo -ne "\033]0;${HOSTNAME%%.*}:${PWD/$HOME/~}\007"'
        ;;
    screen)
        PROMPT_COMMAND='echo -ne "\033_${HOSTNAME%%.*}:${PWD/$HOME/~}\033\\"'
        ;;
esac

# prompt colour
if [ "$TERM" != 'dumb'  ] && [ -n "$BASH" ]
then
    # export PS1='\[\033[0;32m\]\u@\h:\[\033[33m\][\W]\[\033[01;36m\]$git_branch \$ \[\033[00m\]'
    export PS1='\[\e[0m\]\u@\[\e[1;$(hostname_color)m\]\h:\[\033[33m\][\W]\[\033[01;36m\]$git_branch \$ \[\033[00m\]'
    export PS2="continue-> "
fi

#
# Turn the prompt to red on error
#
export failed_msg="===== DANGER: FAILED ====="
export PS1="\[\e[\`if [ \$? = 0 ]; then echo '0;32m'; else echo '1;37;41m' $failed_msg; fi\`\]$PS1\[\e[0m\]"

# prompt for Git
PROMPT_COMMAND="find_git_branch; $PROMPT_COMMAND"


######################################################################
# FUNCTIONS
#

function prompt {
  local BLUE="\[\033[0;34m\]"
  local DARK_BLUE="\[\033[1;34m\]"
  local RED="\[\033[0;31m\]"
  local DARK_RED="\[\033[1;31m\]"
  local NO_COLOR="\[\033[0m\]"
  case $TERM in
    xterm*|rxvt*)
      TITLEBAR='\[\033]0;\u@\h:]'
      ;;
    *)
      TITLEBAR=""
      ;;
  esac
  PS1="\u@\h [\t]> "
  PS1="${TITLEBAR}\
  $DARK_BLUE\u@\h $DARK_RED[\t]>$NO_COLOR "
  PS2='continue-> '
  PS4='$0.$LINENO+ '
}

#
# Color prompt for Git branch
#
function find_git_branch {
    local dir=. head
    until [ "$dir" -ef / ]; do
        if [ -f "$dir/.git/HEAD" ]; then
            head=$(< "$dir/.git/HEAD")
            if [[ $head == ref:\ refs/heads/* ]]; then
                git_branch=" ${head##*/}"
            elif [[ $head != '' ]]; then
                git_branch=' (detached)'
            else
                git_branch=' (unknown)'
            fi
            return
        fi
        dir="../$dir"
    done
    git_branch=''
}

#
# Colors on a per-server basis based on a simple
# checksum. Inspired by http://geofft.mit.edu/blog/sipb/125
#
function hostname_color() {
    echo $((30 + $(hostname | cksum | cut -c1-3) % 6))
    return 0
}


######################################################################
# Colours
#
BLACK='\e[0;30m'
BLUE='\e[0;34m'
GREEN='\e[0;32m'
CYAN='\e[0;36m'
RED='\e[0;31m'
PURPLE='\e[0;35m'
BROWN='\e[0;33m'
LIGHTGRAY='\e[0;37m'
DARKGRAY='\e[1;30m'
LIGHTBLUE='\e[1;34m'
LIGHTGREEN='\e[1;32m'
LIGHTCYAN='\e[1;36m'
LIGHTRED='\e[1;31m'
LIGHTPURPLE='\e[1;35m'
YELLOW='\e[1;33m'
WHITE='\e[1;37m'
NC='\e[0m'    # No Color

# Prompt section
rgb_restore='\[\033[00m\]'
rgb_black='\[\033[00;30m\]'
rgb_firebrick='\[\033[00;31m\]'
rgb_red='\[\033[01;31m\]'
rgb_forest='\[\033[00;32m\]'
rgb_green='\[\033[01;32m\]'
rgb_brown='\[\033[00;33m\]'
rgb_yellow='\[\033[01;33m\]'
rgb_navy='\[\033[00;34m\]'
rgb_blue='\[\033[01;34m\]'
rgb_purple='\[\033[00;35m\]'
rgb_magenta='\[\033[01;35m\]'
rgb_cadet='\[\033[00;36m\]'
rgb_cyan='\[\033[01;36m\]'
rgb_gray='\[\033[00;37m\]'
rgb_white='\[\033[01;37m\]'
rgb_host="${rgb_cyan}"
rgb_std="${rgb_white}"

if [ `id -u` -eq 0 ]
then
    rgb_usr="${rgb_red}"
else
    rgb_usr="${rgb_green}"
fi

unset rgb_restore \
 rgb_black     \
 rgb_firebrick \
 rgb_host      \
 rgb_red       \
 rgb_forest    \
 rgb_green     \
 rgb_brown     \
 rgb_yellow    \
 rgb_navy      \
 rgb_blue      \
 rgb_purple    \
 rgb_magenta   \
 rgb_cadet     \
 rgb_cyan      \
 rgb_gray      \
 rgb_white     \
 rgb_std       \
 rgb_usr

# Welcome screen
echo -ne "${LIGHTGREEN}" "Hello, $USER. today is, "; date
echo -e "${LIGHTRED}"; cal ;
echo -ne "${CYAN}";
echo -ne "${LIGHTPURPLE}Sysinfo:";uptime ;echo ""

# Colour grep
export GREP_OPTIONS='--color=auto'
export GREP_COLOR='1;33'


######################################################################
# Pretty Man pages
#
export LESS_TERMCAP_mb=$'\E[01;31m'             # begin blinking
export LESS_TERMCAP_md=$'\E[01;38;5;74m'        # begin bold
export LESS_TERMCAP_me=$'\E[0m'                 # end mode
export LESS_TERMCAP_se=$'\E[0m'                 # end standout-mode
export LESS_TERMCAP_so=$'\E[38;5;246m'          # begin standout-mode - info box
export LESS_TERMCAP_ue=$'\E[0m'                 # end underline
export LESS_TERMCAP_us=$'\E[04;38;5;146m'       # begin underline

######################################################################
# Aliases
#

# Alias definitions.
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    # test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias ll='ls -lp --color=tty'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# cvsroot alias
alias cvsclink='export CVSROOT=:pserver:et6339@vcmsd.vic.hpa:/cvsroot'
alias cvslaptop='export CVSROOT=:pserver:et6339@localhost:/cvsroot'
alias cvsit='export CVSROOT=:pserver:et6339@robin.vic.hpa:/prod2/cvsroot'
alias cvsitnew='export CVSROOT=:pserver:taned@mel4app05pv.salmat.com.au:/prod/cvsroot'
alias cvsedm='export CVSROOT=:pserver:et6339@robin.vic.hpa:/prod2/edm/cvsroot'

# Machines alias
alias sshmadev='ssh eddyt@client-gw2-mip-madev.act.hpa'
alias sshsybill='ssh eddyt@sybill.act.hpa'
alias sshvcmsp='ssh -Y vcmsp'
alias sshvcmsd='ssh -Y vcmsd'
alias sshedd='ssh xfrmbk@edd'
alias sshappsvr04='ssh taned@appsvr04.vic.hpa'
alias sshmel4app='ssh taned@mel4app05pv.vic.hpa'
alias sshmel4dev='ssh taned@mel4dev05pv.vic.hpa'
alias sshpbursyd2='ssh barrnsw@pbursyd2.nsw.hpa'
alias sshmel4dev06lx='ssh et6339@mel4dev06lx.vic.hpa'
alias sshmel4app06lx='ssh et6339@mel4app06lx.salmat.com.au'
alias sshatoprod='ssh taned@atoprod.act.hpa'

# Colour diff
function cvsdiff() { cvs diff $@ | colordiff;}
function rcsdiff() { /usr/bin/rcsdiff -u $@ | colordiff;}
alias diff='colordiff -u'

# Machine load sort by CPU usage
alias pscpu='ps -eopid,ppid,pcpu,etime,vsz,args | sort -rnk 3'

# CDPATH to centrelink cvs working directory
# export CDPATH=/home/et6339/cvs/centrelink.solution-consolidation_development/bin/
alias ..2="cd ../../"
alias ..3="cd ../../../"
alias cdb="cd /users/et6339/cvs/centrelink.solution-consolidation_development/bin"
alias cdd="cd /cmsdata/et6339/client/centrelink/TEST/data"

# mutt alias
alias mutt='mutt -F $HOME/.mutt/muttrc_hpa'

# newer VIM version
alias vi='~/files/vim/bin/vim'
alias vim='~/files/vim/bin/vim'

######################################################################
# Perl 5
#

# perlbrew
# source /home/et6339/perl5/perlbrew/etc/bashrc

# alias myperl='/opt/perl/bin/perl'
# alias cdp='cd /opt/perl/bin/'
# alias perldoc='/opt/perl/bin/perldoc'
# eval $(perl -I$HOME/perl5/lib/perl5 -Mlocal::lib)
export PERL5LIB=$PERL5LIB:/users/et6339/files/site_perl/lib/perl5/5.8.5:/users/et6339/files/site_perl/lib/perl5/site_perl/5.8.5

export PERLDOC=-it

# perl module version
function pmver ( ) { perl -M$1 -le "print $1->VERSION"; }
function mypmver ( ) { myperl -M$1 -E "say $1->VERSION"; }

# perldoc-complete
alias pod=perldoc
complete -C perldoc-complete.pl -o nospace -o default pod

######################################################################
# Java home
#
export JAVA_HOME=/usr/lib/jvm/java-1.6.0-openjdk

## START-BCVI
  echo $PATH | grep -q /users/et6339/bin || PATH="/users/et6339/bin:$PATH"
  test -n "$(which bcvi)" && eval "$(bcvi --unpack-term)"
  test -n "${BCVI_CONF}"  && alias vi="bcvi"
  test -n "${BCVI_CONF}"  && alias suvi="EDITOR='bcvi -c viwait' sudoedit"
  test -n "${BCVI_CONF}"  && alias bcp="bcvi -c scpd"
  test -n "${BCVI_CONF}"  && alias bnotify="bcvi --no-path-xlate -c notify --"
## END-BCVI

